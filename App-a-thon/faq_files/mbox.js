var mboxCopyright = "Copyright 1996-2009. Adobe Systems Incorporated. All rights reserved";mboxUrlBuilder = function(a, b) { this.a = a; this.b = b; this.c = new Array(); this.d = function(e) { return e; }; this.f = null;};mboxUrlBuilder.prototype.addParameter = function(g, h) { var i = new RegExp('(\'|")'); if (i.exec(g)) { throw "Parameter '" + g + "' contains invalid characters"; } for (var j = 0; j < this.c.length; j++) { var k = this.c[j]; if (k.name == g) { k.value = h; return this; } } var l = new Object(); l.name = g; l.value = h; this.c[this.c.length] = l; return this;};mboxUrlBuilder.prototype.addParameters = function(c) { if (!c) { return this; } for (var j = 0; j < c.length; j++) { var m = c[j].indexOf('='); if (m == -1 || m == 0) { continue; } this.addParameter(c[j].substring(0, m), c[j].substring(m + 1, c[j].length)); } return this;};mboxUrlBuilder.prototype.setServerType = function(n) { this.o = n;};mboxUrlBuilder.prototype.setBasePath = function(f) { this.f = f;};mboxUrlBuilder.prototype.setUrlProcessAction = function(p) { this.d = p;};mboxUrlBuilder.prototype.buildUrl = function() { var q = this.f ? this.f : '/m2/' + this.b + '/mbox/' + this.o; var r = document.location.protocol == 'file:' ? 'http:' : document.location.protocol; var e = r + "//" + this.a + q; var s = e.indexOf('?') != -1 ? '&' : '?'; for (var j = 0; j < this.c.length; j++) { var k = this.c[j]; e += s + encodeURIComponent(k.name) + '=' + encodeURIComponent(k.value); s = '&'; } return this.t(this.d(e));};mboxUrlBuilder.prototype.getParameters = function() { return this.c;};mboxUrlBuilder.prototype.setParameters = function(c) { this.c = c;};mboxUrlBuilder.prototype.clone = function() { var u = new mboxUrlBuilder(this.a, this.b); u.setServerType(this.o); u.setBasePath(this.f); u.setUrlProcessAction(this.d); for (var j = 0; j < this.c.length; j++) { u.addParameter(this.c[j].name, this.c[j].value); } return u;};mboxUrlBuilder.prototype.t = function(v) { return v.replace(/\"/g, '&quot;').replace(/>/g, '&gt;');};mboxStandardFetcher = function() { };mboxStandardFetcher.prototype.getType = function() { return 'standard';};mboxStandardFetcher.prototype.fetch = function(w) { w.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + w.buildUrl() + '" language="JavaScript"><' + '\/scr' + 'ipt>');};mboxStandardFetcher.prototype.cancel = function() { };mboxAjaxFetcher = function() { };mboxAjaxFetcher.prototype.getType = function() { return 'ajax';};mboxAjaxFetcher.prototype.fetch = function(w) { w.setServerType(this.getType()); var e = w.buildUrl(); this.x = document.createElement('script'); this.x.src = e; document.body.appendChild(this.x);};mboxAjaxFetcher.prototype.cancel = function() { };mboxMap = function() { this.y = new Object(); this.z = new Array();};mboxMap.prototype.put = function(A, h) { if (!this.y[A]) { this.z[this.z.length] = A; } this.y[A] = h;};mboxMap.prototype.get = function(A) { return this.y[A];};mboxMap.prototype.remove = function(A) { this.y[A] = undefined;};mboxMap.prototype.each = function(p) { for (var j = 0; j < this.z.length; j++ ) { var A = this.z[j]; var h = this.y[A]; if (h) { var B = p(A, h); if (B === false) { break; } } }};mboxFactory = function(C, b, D) { this.E = false; this.C = C; this.D = D; this.F = new mboxList(); mboxFactories.put(D, this); this.G = typeof document.createElement('div').replaceChild != 'undefined' && (function() { return true; })() && typeof document.getElementById != 'undefined' && typeof (window.attachEvent || document.addEventListener || window.addEventListener) != 'undefined' && typeof encodeURIComponent != 'undefined'; this.H = this.G && mboxGetPageParameter('mboxDisable') == null; var I = D == 'default'; this.J = new mboxCookieManager( 'mbox' + (I ? '' : ('-' + D)), (function() { return mboxCookiePageDomain(); })()); this.H = this.H && this.J.isEnabled() && (this.J.getCookie('disable') == null); if (this.isAdmin()) { this.enable(); } this.K = mboxGenerateId(); this.L = mboxScreenHeight(); this.M = mboxScreenWidth(); this.N = mboxBrowserWidth(); this.O = mboxBrowserHeight(); this.P = mboxScreenColorDepth(); this.Q = mboxBrowserTimeOffset(); this.R = new mboxSession(this.K, 'mboxSession', 'session', 31 * 60, this.J); this.S = new mboxPC('PC', 2592000, this.J); this.w = new mboxUrlBuilder(C, b); this.T(this.w, I); this.U = new Date().getTime(); this.V = this.U; var W = this; this.addOnLoad(function() { W.V = new Date().getTime(); }); if (this.G) { this.addOnLoad(function() { W.E = true; W.getMboxes().each(function(X) { X.setFetcher(new mboxAjaxFetcher()); X.finalize(); }); }); this.limitTraffic(100, 10368000); if (this.H) { this.Y(); this.Z = new mboxSignaler(function(_, c) { return W.create(_, c); }, this.J); } }};mboxFactory.prototype.forcePCId = function(ab) { if (this.S.forceId(ab)) { this.R.forceId(mboxGenerateId()); }};mboxFactory.prototype.forceSessionId = function(ab) { this.R.forceId(ab);};mboxFactory.prototype.isEnabled = function() { return this.H;};mboxFactory.prototype.getDisableReason = function() { return this.J.getCookie('disable');};mboxFactory.prototype.isSupported = function() { return this.G;};mboxFactory.prototype.disable = function(bb, cb) { if (typeof bb == 'undefined') { bb = 60 * 60; } if (typeof cb == 'undefined') { cb = 'unspecified'; } if (!this.isAdmin()) { this.H = false; this.J.setCookie('disable', cb, bb); }};mboxFactory.prototype.enable = function() { this.H = true; this.J.deleteCookie('disable');};mboxFactory.prototype.isAdmin = function() { return document.location.href.indexOf('mboxEnv') != -1;};mboxFactory.prototype.limitTraffic = function(db, bb) {};mboxFactory.prototype.addOnLoad = function(p) { if (window.addEventListener) { window.addEventListener('load', p, false); } else if (document.addEventListener) { document.addEventListener('load', p, false); } else if (document.attachEvent) { window.attachEvent('onload', p); }};mboxFactory.prototype.getEllapsedTime = function() { return this.V - this.U;};mboxFactory.prototype.getEllapsedTimeUntil = function(eb) { return eb - this.U;};mboxFactory.prototype.getMboxes = function() { return this.F;};mboxFactory.prototype.get = function(_, fb) { return this.F.get(_).getById(fb || 0);};mboxFactory.prototype.update = function(_, c) { if (!this.isEnabled()) { return; } if (this.F.get(_).length() == 0) { throw "Mbox " + _ + " is not defined"; } this.F.get(_).each(function(X) { X.getUrlBuilder() .addParameter('mboxPage', mboxGenerateId()); X.load(c); });};mboxFactory.prototype.create = function( _, c, gb) { if (!this.isSupported()) { return null; } var e = this.w.clone(); e.addParameter('mboxCount', this.F.length() + 1); e.addParameters(c); var fb = this.F.get(_).length(); var hb = this.D + '-' + _ + '-' + fb; var ib; if (gb) { ib = new mboxLocatorNode(gb); } else { if (this.E) { throw 'The page has already been loaded, can\'t write marker'; } ib = new mboxLocatorDefault(hb); } try { var W = this; var jb = 'mboxImported-' + hb; var X = new mbox(_, fb, e, ib, jb); if (this.H) { X.setFetcher(this.E ? new mboxAjaxFetcher() : new mboxStandardFetcher()); } X.setOnError(function(kb, n) { X.setMessage(kb); X.activate(); if (!X.isActivated()) { W.disable(60 * 60, kb); window.location.reload(false); } }); this.F.add(X); } catch (lb) { this.disable(); throw 'Failed creating mbox "' + _ + '", the error was: ' + lb; } var mb = new Date(); e.addParameter('mboxTime', mb.getTime() - (mb.getTimezoneOffset() * 60000)); return X;};mboxFactory.prototype.getCookieManager = function() { return this.J;};mboxFactory.prototype.getPageId = function() { return this.K;};mboxFactory.prototype.getPCId = function() { return this.S;};mboxFactory.prototype.getSessionId = function() { return this.R;};mboxFactory.prototype.getSignaler = function() { return this.Z;};mboxFactory.prototype.getUrlBuilder = function() { return this.w;};mboxFactory.prototype.T = function(e, I) { e.addParameter('mboxHost', document.location.hostname) .addParameter('mboxSession', this.R.getId()); if (!I) { e.addParameter('mboxFactoryId', this.D); } if (this.S.getId() != null) { e.addParameter('mboxPC', this.S.getId()); } e.addParameter('mboxPage', this.K); e.addParameter('screenHeight', this.L); e.addParameter('screenWidth', this.M); e.addParameter('browserWidth', this.N); e.addParameter('browserHeight', this.O); e.addParameter('browserTimeOffset', this.Q); e.addParameter('colorDepth', this.P); e.setUrlProcessAction(function(e) { e += '&mboxURL=' + encodeURIComponent(document.location); var nb = encodeURIComponent(document.referrer); if (e.length + nb.length < 2000) { e += '&mboxReferrer=' + nb; } e += '&mboxVersion=' + mboxVersion; return e; });};mboxFactory.prototype.ob = function() { return "";};mboxFactory.prototype.Y = function() { document.write('<style>.' + 'mboxDefault' + ' { visibility:hidden; }</style>');};mboxFactory.prototype.isDomLoaded = function() { return this.E;};mboxSignaler = function(pb, J) { this.J = J; var qb = J.getCookieNames('signal-'); for (var j = 0; j < qb.length; j++) { var rb = qb[j]; var sb = J.getCookie(rb).split('&'); var X = pb(sb[0], sb); X.load(); J.deleteCookie(rb); }};mboxSignaler.prototype.signal = function(tb, _ ) { this.J.setCookie('signal-' + tb, mboxShiftArray(arguments).join('&'), 45 * 60);};mboxList = function() { this.F = new Array();};mboxList.prototype.add = function(X) { if (X != null) { this.F[this.F.length] = X; }};mboxList.prototype.get = function(_) { var B = new mboxList(); for (var j = 0; j < this.F.length; j++) { var X = this.F[j]; if (X.getName() == _) { B.add(X); } } return B;};mboxList.prototype.getById = function(ub) { return this.F[ub];};mboxList.prototype.length = function() { return this.F.length;};mboxList.prototype.each = function(p) { if (typeof p != 'function') { throw 'Action must be a function, was: ' + typeof(p); } for (var j = 0; j < this.F.length; j++) { p(this.F[j]); }};mboxLocatorDefault = function(g) { this.g = 'mboxMarker-' + g; document.write('<div id="' + this.g + '" style="visibility:hidden;display:none">&nbsp;</div>');};mboxLocatorDefault.prototype.locate = function() { var vb = document.getElementById(this.g); while (vb != null) { if (vb.nodeType == 1) { if (vb.className == 'mboxDefault') { return vb; } } vb = vb.previousSibling; } return null;};mboxLocatorDefault.prototype.force = function() { var wb = document.createElement('div'); wb.className = 'mboxDefault'; var xb = document.getElementById(this.g); xb.parentNode.insertBefore(wb, xb); return wb;};mboxLocatorNode = function(yb) { this.vb = yb;};mboxLocatorNode.prototype.locate = function() { return typeof this.vb == 'string' ? document.getElementById(this.vb) : this.vb;};mboxLocatorNode.prototype.force = function() { return null;};mboxCreate = function(_ ) { var X = mboxFactoryDefault.create( _, mboxShiftArray(arguments)); if (X) { X.load(); } return X;};mboxDefine = function(gb, _ ) { var X = mboxFactoryDefault.create(_, mboxShiftArray(mboxShiftArray(arguments)), gb); return X;};mboxUpdate = function(_ ) { mboxFactoryDefault.update(_, mboxShiftArray(arguments));};mbox = function(g, zb, w, Ab, jb) { this.Bb = null; this.Cb = 0; this.ib = Ab; this.jb = jb; this.Db = null; this.Eb = new mboxOfferContent(); this.wb = null; this.w = w; this.message = ''; this.Fb = new Object(); this.Gb = 0; this.zb = zb; this.g = g; this.Hb(); w.addParameter('mbox', g) .addParameter('mboxId', zb); this.Ib = function() {}; this.Jb = function() {}; this.Kb = null;};mbox.prototype.getId = function() { return this.zb;};mbox.prototype.Hb = function() { if (this.g.length > 250) { throw "Mbox Name " + this.g + " exceeds max length of " + "250 characters."; } else if (this.g.match(/^\s+|\s+$/g)) { throw "Mbox Name " + this.g + " has leading/trailing whitespace(s)."; }};mbox.prototype.getName = function() { return this.g;};mbox.prototype.getParameters = function() { var c = this.w.getParameters(); var B = new Array(); for (var j = 0; j < c.length; j++) { if (c[j].name.indexOf('mbox') != 0) { B[B.length] = c[j].name + '=' + c[j].value; } } return B;};mbox.prototype.setOnLoad = function(p) { this.Jb = p; return this;};mbox.prototype.setMessage = function(kb) { this.message = kb; return this;};mbox.prototype.setOnError = function(Ib) { this.Ib = Ib; return this;};mbox.prototype.setFetcher = function(Lb) { if (this.Db) { this.Db.cancel(); } this.Db = Lb; return this;};mbox.prototype.getFetcher = function() { return this.Db;};mbox.prototype.load = function(c) { if (this.Db == null) { return this; } this.setEventTime("load.start"); this.cancelTimeout(); this.Cb = 0; var w = (c && c.length > 0) ? this.w.clone().addParameters(c) : this.w; this.Db.fetch(w); var W = this; this.Mb = setTimeout(function() { W.Ib('browser timeout', W.Db.getType()); }, 15000); this.setEventTime("load.end"); return this;};mbox.prototype.loaded = function() { this.cancelTimeout(); if (!this.activate()) { var W = this; setTimeout(function() { W.loaded(); }, 100); }};mbox.prototype.activate = function() { if (this.Cb) { return this.Cb; } this.setEventTime('activate' + ++this.Gb + '.start'); if (this.show()) { this.cancelTimeout(); this.Cb = 1; } this.setEventTime('activate' + this.Gb + '.end'); return this.Cb;};mbox.prototype.isActivated = function() { return this.Cb;};mbox.prototype.setOffer = function(Eb) { if (Eb && Eb.show && Eb.setOnLoad) { this.Eb = Eb; } else { throw 'Invalid offer'; } return this;};mbox.prototype.getOffer = function() { return this.Eb;};mbox.prototype.show = function() { this.setEventTime('show.start'); var B = this.Eb.show(this); this.setEventTime(B == 1 ? "show.end.ok" : "show.end"); return B;};mbox.prototype.showContent = function(Nb) { if (Nb == null) { return 0; } if (this.wb == null || !this.wb.parentNode) { this.wb = this.getDefaultDiv(); if (this.wb == null) { return 0; } } if (this.wb != Nb) { this.Ob(this.wb); this.wb.parentNode.replaceChild(Nb, this.wb); this.wb = Nb; } this.Pb(Nb); this.Jb(); return 1;};mbox.prototype.hide = function() { this.setEventTime('hide.start'); var B = this.showContent(this.getDefaultDiv()); this.setEventTime(B == 1 ? 'hide.end.ok' : 'hide.end.fail'); return B;};mbox.prototype.finalize = function() { this.setEventTime('finalize.start'); this.cancelTimeout(); if (this.getDefaultDiv() == null) { if (this.ib.force() != null) { this.setMessage('No default content, an empty one has been added'); } else { this.setMessage('Unable to locate mbox'); } } if (!this.activate()) { this.hide(); this.setEventTime('finalize.end.hide'); } this.setEventTime('finalize.end.ok');};mbox.prototype.cancelTimeout = function() { if (this.Mb) { clearTimeout(this.Mb); } if (this.Db != null) { this.Db.cancel(); }};mbox.prototype.getDiv = function() { return this.wb;};mbox.prototype.getDefaultDiv = function() { if (this.Kb == null) { this.Kb = this.ib.locate(); } return this.Kb;};mbox.prototype.setEventTime = function(Qb) { this.Fb[Qb] = (new Date()).getTime();};mbox.prototype.getEventTimes = function() { return this.Fb;};mbox.prototype.getImportName = function() { return this.jb;};mbox.prototype.getURL = function() { return this.w.buildUrl();};mbox.prototype.getUrlBuilder = function() { return this.w;};mbox.prototype.Rb = function(wb) { return wb.style.display != 'none';};mbox.prototype.Pb = function(wb) { this.Sb(wb, true);};mbox.prototype.Ob = function(wb) { this.Sb(wb, false);};mbox.prototype.Sb = function(wb, Tb) { wb.style.visibility = Tb ? "visible" : "hidden"; wb.style.display = Tb ? "block" : "none";};mboxOfferContent = function() { this.Jb = function() {};};mboxOfferContent.prototype.show = function(X) { var B = X.showContent(document.getElementById(X.getImportName())); if (B == 1) { this.Jb(); } return B;};mboxOfferContent.prototype.setOnLoad = function(Jb) { this.Jb = Jb;};mboxOfferAjax = function(Nb) { this.Nb = Nb; this.Jb = function() {};};mboxOfferAjax.prototype.setOnLoad = function(Jb) { this.Jb = Jb;};mboxOfferAjax.prototype.show = function(X) { var Ub = document.createElement('div'); Ub.id = X.getImportName(); Ub.innerHTML = this.Nb; var B = X.showContent(Ub); if (B == 1) { this.Jb(); } return B;};mboxOfferDefault = function() { this.Jb = function() {};};mboxOfferDefault.prototype.setOnLoad = function(Jb) { this.Jb = Jb;};mboxOfferDefault.prototype.show = function(X) { var B = X.hide(); if (B == 1) { this.Jb(); } return B;};mboxCookieManager = function mboxCookieManager(g, Vb) { this.g = g; this.Vb = Vb == '' || Vb.indexOf('.') == -1 ? '' : '; domain=' + Vb; this.Wb = new mboxMap(); this.loadCookies();};mboxCookieManager.prototype.isEnabled = function() { this.setCookie('check', 'true', 60); this.loadCookies(); return this.getCookie('check') == 'true';};mboxCookieManager.prototype.setCookie = function(g, h, bb) { if (typeof g != 'undefined' && typeof h != 'undefined' && typeof bb != 'undefined') { var Xb = new Object(); Xb.name = g; Xb.value = escape(h); Xb.expireOn = Math.ceil(bb + new Date().getTime() / 1000); this.Wb.put(g, Xb); this.saveCookies(); }};mboxCookieManager.prototype.getCookie = function(g) { var Xb = this.Wb.get(g); return Xb ? unescape(Xb.value) : null;};mboxCookieManager.prototype.deleteCookie = function(g) { this.Wb.remove(g); this.saveCookies();};mboxCookieManager.prototype.getCookieNames = function(Yb) { var Zb = new Array(); this.Wb.each(function(g, Xb) { if (g.indexOf(Yb) == 0) { Zb[Zb.length] = g; } }); return Zb;};mboxCookieManager.prototype.saveCookies = function() { var _b = new Array(); var ac = 0; this.Wb.each(function(g, Xb) { _b[_b.length] = g + '#' + Xb.value + '#' + Xb.expireOn; if (ac < Xb.expireOn) { ac = Xb.expireOn; } }); var bc = new Date(ac * 1000); document.cookie = this.g + '=' + _b.join('|') + '; expires=' + bc.toGMTString() + '; path=/' + this.Vb;};mboxCookieManager.prototype.loadCookies = function() { this.Wb = new mboxMap(); var cc = document.cookie.indexOf(this.g + '='); if (cc != -1) { var dc = document.cookie.indexOf(';', cc); if (dc == -1) { dc = document.cookie.indexOf(',', cc); if (dc == -1) { dc = document.cookie.length; } } var ec = document.cookie.substring( cc + this.g.length + 1, dc).split('|'); var fc = Math.ceil(new Date().getTime() / 1000); for (var j = 0; j < ec.length; j++) { var Xb = ec[j].split('#'); if (fc <= Xb[2]) { var gc = new Object(); gc.name = Xb[0]; gc.value = Xb[1]; gc.expireOn = Xb[2]; this.Wb.put(gc.name, gc); } } }};mboxSession = function(hc, ic, rb, jc, J) { this.ic = ic; this.rb = rb; this.jc = jc; this.J = J; this.kc = false; this.zb = typeof mboxForceSessionId != 'undefined' ? mboxForceSessionId : mboxGetPageParameter(this.ic); if (this.zb == null || this.zb.length == 0) { this.zb = J.getCookie(rb); if (this.zb == null || this.zb.length == 0) { this.zb = hc; this.kc = true; } } J.setCookie(rb, this.zb, jc);};mboxSession.prototype.getId = function() { return this.zb;};mboxSession.prototype.forceId = function(ab) { this.zb = ab; this.J.setCookie(this.rb, this.zb, this.jc);};mboxPC = function(rb, jc, J) { this.rb = rb; this.jc = jc; this.J = J; this.zb = typeof mboxForcePCId != 'undefined' ? mboxForcePCId : J.getCookie(rb); if (this.zb != null) { J.setCookie(rb, this.zb, jc); }};mboxPC.prototype.getId = function() { return this.zb;};mboxPC.prototype.forceId = function(ab) { if (this.zb != ab) { this.zb = ab; this.J.setCookie(this.rb, this.zb, this.jc); return true; } return false;};mboxGetPageParameter = function(g) { var B = null; var lc = new RegExp(g + "=([^\&]*)"); var mc = lc.exec(document.location); if (mc != null && mc.length >= 2) { B = mc[1]; } return B;};mboxSetCookie = function(g, h, bb) { return mboxFactoryDefault.getCookieManager().setCookie(g, h, bb);};mboxGetCookie = function(g) { return mboxFactoryDefault.getCookieManager().getCookie(g);};mboxCookiePageDomain = function() { var Vb = (/([^:]*)(:[0-9]{0,5})?/).exec(document.location.host)[1]; var nc = /[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/; if (!nc.exec(Vb)) { var oc = (/([^\.]+\.[^\.]{3}|[^\.]+\.[^\.]+\.[^\.]{2})$/).exec(Vb); if (oc) { Vb = oc[0]; } } return Vb ? Vb: "";};mboxShiftArray = function(pc) { var B = new Array(); for (var j = 1; j < pc.length; j++) { B[B.length] = pc[j]; } return B;};mboxGenerateId = function() { return (new Date()).getTime() + "-" + Math.floor(Math.random() * 999999);};mboxScreenHeight = function() { return screen.height;};mboxScreenWidth = function() { return screen.width;};mboxBrowserWidth = function() { return (window.innerWidth) ? window.innerWidth : document.documentElement ? document.documentElement.clientWidth : document.body.clientWidth;};mboxBrowserHeight = function() { return (window.innerHeight) ? window.innerHeight : document.documentElement ? document.documentElement.clientHeight : document.body.clientHeight;};mboxBrowserTimeOffset = function() { return -new Date().getTimezoneOffset();};mboxScreenColorDepth = function() { return screen.pixelDepth;}; if (typeof mboxVersion == 'undefined') { var mboxVersion = 39; var mboxFactories = new mboxMap(); var mboxFactoryDefault = new mboxFactory('microsoftwindowscom.tt.omtrdc.net', 'microsoftwindowscom', 'default');};if (mboxGetPageParameter("mboxDebug") != null || mboxFactoryDefault.getCookieManager() .getCookie("debug") != null) { setTimeout(function() { if (typeof mboxDebugLoaded == 'undefined') { alert('Could not load the remote debug.\nPlease check your connection' + ' to Test&amp;Target servers'); } }, 60*60); document.write('<' + 'scr' + 'ipt language="Javascript1.2" src=' + '"http://admin9.testandtarget.omniture.com/admin/mbox/mbox_debug.jsp?mboxServerHost=microsoftwindowscom.tt.omtrdc.net' + '&clientCode=microsoftwindowscom"><' + '\/scr' + 'ipt>');};mboxScPluginFetcher = function(b, qc) { this.b = b; this.qc = qc;};mboxScPluginFetcher.prototype.rc = function(w) { w.setBasePath('/m2/' + this.b + '/sc/standard'); this.sc(w); var e = w.buildUrl(); e += '&scPluginVersion=1'; return e;};mboxScPluginFetcher.prototype.sc = function(w) { var tc = [ "dynamicVariablePrefix","visitorID","vmk","ppu","charSet", "visitorNamespace","cookieDomainPeriods","cookieLifetime","pageName", "currencyCode","variableProvider","channel","server", "pageType","transactionID","purchaseID","campaign","state","zip","events", "products","linkName","linkType","resolution","colorDepth", "javascriptVersion","javaEnabled","cookiesEnabled","browserWidth", "browserHeight","connectionType","homepage","pe","pev1","pev2","pev3", "visitorSampling","visitorSamplingGroup","dynamicAccountSelection", "dynamicAccountList","dynamicAccountMatch","trackDownloadLinks", "trackExternalLinks","trackInlineStats","linkLeaveQueryString", "linkDownloadFileTypes","linkExternalFilters","linkInternalFilters", "linkTrackVars","linkTrackEvents","linkNames","lnk","eo" ]; for (var j = 0; j < tc.length; j++) { this.uc(tc[j], w); } for (var j = 1; j <= 50; j++) { this.uc('prop' + j, w); this.uc('eVar' + j, w); this.uc('hier' + j, w); }};mboxScPluginFetcher.prototype.uc = function(g, w) { var h = this.qc[g]; if (typeof(h) === 'undefined' || h === null || h === '') { return; } w.addParameter(g, h);};mboxScPluginFetcher.prototype.cancel = function() { };mboxStandardScPluginFetcher = function(b, qc) { mboxScPluginFetcher.call(this, b, qc);};mboxStandardScPluginFetcher.prototype = new mboxScPluginFetcher;mboxStandardScPluginFetcher.prototype.getType = function() { return 'standard';};mboxStandardScPluginFetcher.prototype.fetch = function(w) { w.setServerType(this.getType()); var e = this.rc(w); document.write('<' + 'scr' + 'ipt src="' + e + '" language="JavaScript"><' + '\/scr' + 'ipt>');};mboxAjaxScPluginFetcher = function(b, qc) { mboxScPluginFetcher.call(this, b, qc);};mboxAjaxScPluginFetcher.prototype = new mboxScPluginFetcher;mboxAjaxScPluginFetcher.prototype.fetch = function(w) { w.setServerType(this.getType()); var e = this.rc(w); this.x = document.createElement('script'); this.x.src = e; document.body.appendChild(this.x);};mboxAjaxScPluginFetcher.prototype.getType = function() { return 'ajax';};function mboxLoadSCPlugin(qc) { if (!qc) { return null; } qc.m_tt = function(qc) { var vc = qc.m_i('tt'); vc.H = true; vc.b = 'microsoftwindowscom'; vc['_t'] = function() { if (!this.isEnabled()) { return; } var X = this.xc(); if (X) { var Lb = mboxFactoryDefault.isDomLoaded() ? new mboxAjaxScPluginFetcher(this.b, this.s) : new mboxStandardScPluginFetcher(this.b, this.s); X.setFetcher(Lb); X.load(); } }; vc.isEnabled = function() { return this.H && mboxFactoryDefault.isEnabled(); }; vc.xc = function() { var _ = this.yc(); var wb = document.createElement('DIV'); return mboxFactoryDefault.create(_, new Array(), wb); }; vc.yc = function() { var zc = this.s.events && this.s.events.indexOf('purchase') != -1; return 'SiteCatalyst: ' + (zc ? 'purchase' : 'event'); }; }; return qc.loadModule('tt');};mboxFactoryDefault.addOnLoad(mboxAppendSession);var mboxSessionKeyword = "OFM";function mboxAppendAnchorTags() { var anchorTags = document.getElementsByTagName('a'); for(i = 0; i < anchorTags.length; i++) { if (anchorTags[i].href.indexOf(mboxSessionKeyword) != -1) { anchorTags[i].href = anchorTags[i].href.replace( mboxSessionKeyword,"mboxSession="+mboxFactoryDefault.getSessionId().getId()); } }}function mboxAppendForm() { var formTags = document.getElementsByTagName('form'); for(i = 0; i < formTags.length; i++) { if (formTags[i].action.indexOf(mboxSessionKeyword) != -1) { formTags[i].action = formTags[i].action.replace( mboxSessionKeyword,"mboxSession="+mboxFactoryDefault.getSessionId().getId()); } }}function mboxAppendSession() { mboxAppendAnchorTags(); mboxAppendForm();}